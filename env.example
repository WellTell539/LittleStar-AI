# Claude AI Dashboard 环境变量配置
# 复制此文件为 .env.local 并填入真实配置

# ==================== AI API 配置 ====================
# OpenAI API 密钥 (用于真实的AI对话和洞察功能)
# 获取: https://platform.openai.com/api-keys
# 注意: 无此密钥时使用智能模拟回复
OPENAI_API_KEY=your_openai_api_key_here

# 新闻API密钥 (用于AI学习真实新闻内容)
# 获取: https://newsapi.org/register
# 注意: 无此密钥时使用模拟新闻数据
NEXT_PUBLIC_NEWS_API_KEY=your_news_api_key_here

# ==================== 区块链配置 ====================
# 选择区块链网络: "ethereum" 或 "solana"
BLOCKCHAIN_NETWORK=solana

# === 以太坊配置 (当 BLOCKCHAIN_NETWORK=ethereum 时使用) ===
# Infura 项目ID (连接以太坊网络)
# 获取: https://infura.io/dashboard
NEXT_PUBLIC_INFURA_KEY=your_infura_project_id

# 网络端点配置
SEPOLIA_RPC_URL=https://sepolia.infura.io/v3/your_infura_project_id
MAINNET_RPC_URL=https://mainnet.infura.io/v3/your_infura_project_id

# 部署钱包私钥 (仅用于合约部署)
# ⚠️ 警告: 使用测试钱包，勿用主钱包私钥
PRIVATE_KEY=your_wallet_private_key_for_deployment

# === Solana配置 (当 BLOCKCHAIN_NETWORK=solana 时使用) ===
# Solana网络配置
SOLANA_RPC_URL=https://api.devnet.solana.com
SOLANA_WS_URL=wss://api.devnet.solana.com

# Solana程序ID（部署后填写）
CLAUDE_MINI_SBT_PROGRAM_ID=your_claude_mini_sbt_program_id
MEMORY_ANCHOR_PROGRAM_ID=your_memory_anchor_program_id
GOAL_DAO_PROGRAM_ID=your_goal_dao_program_id

# 前端Solana配置（浏览器可访问）
NEXT_PUBLIC_SOLANA_RPC_URL=https://api.devnet.solana.com
NEXT_PUBLIC_CLAUDE_MINI_SBT_PROGRAM_ID=your_claude_mini_sbt_program_id
NEXT_PUBLIC_MEMORY_ANCHOR_PROGRAM_ID=your_memory_anchor_program_id
NEXT_PUBLIC_GOAL_DAO_PROGRAM_ID=your_goal_dao_program_id
NEXT_PUBLIC_BLOCKCHAIN_NETWORK=solana

# Solana钱包配置（服务器端）
SOLANA_WALLET_PRIVATE_KEY=your_solana_private_key

# ==================== 智能合约地址 ====================
# 部署后自动填入，开发时可留空
NEXT_PUBLIC_SOULBOUND_ADDRESS=
NEXT_PUBLIC_MEMORY_ANCHOR_ADDRESS=
NEXT_PUBLIC_GOAL_DAO_ADDRESS=

# ==================== 外部服务 ====================
# Etherscan API (合约验证和数据查询)
# 获取: https://etherscan.io/apis
ETHERSCAN_API_KEY=your_etherscan_api_key

# 数据库连接 (可选，用于生产环境)
DATABASE_URL=postgresql://user:pass@localhost:5432/claude_ai

# ==================== 部署配置 ====================
# Vercel 部署 (可选)
VERCEL_TOKEN=your_vercel_token
VERCEL_ORG_ID=your_vercel_org_id
VERCEL_PROJECT_ID=your_vercel_project_id

# ==================== 应用设置 ====================
# API 基础地址
NEXT_PUBLIC_API_BASE_URL=http://localhost:3000/api

# 功能开关
NEXT_PUBLIC_ENABLE_WEB3=true
NEXT_PUBLIC_ENABLE_AI_INSIGHTS=true
NEXT_PUBLIC_ENABLE_VOICE=true
NEXT_PUBLIC_ENABLE_BLOCKCHAIN_STORAGE=true

# 调试模式
NEXT_PUBLIC_DEBUG_MODE=false

# ==================== Twitter API 配置 ====================
# Twitter API v2 配置 (用于AI动态同步到Twitter)
# 获取: https://developer.twitter.com/en/portal/dashboard
TWITTER_API_KEY=your_twitter_api_key
TWITTER_API_SECRET=your_twitter_api_secret
TWITTER_ACCESS_TOKEN=your_twitter_access_token
TWITTER_ACCESS_TOKEN_SECRET=your_twitter_access_token_secret
TWITTER_BEARER_TOKEN=your_twitter_bearer_token
TWITTER_USERNAME=your_twitter_username

# ==================== 快速开始 ====================
# 1. 复制为 .env.local: cp env.example .env.local
# 2. 配置 OPENAI_API_KEY (AI功能必需)
# 3. 配置 NEXT_PUBLIC_NEWS_API_KEY (AI学习真实新闻，可选)
# 4. 选择区块链网络:
#    - 使用Solana: 配置 SOLANA_RPC_URL 和程序ID
#    - 使用以太坊: 配置 NEXT_PUBLIC_INFURA_KEY 和合约地址
# 5. 配置 Twitter API (Twitter同步功能，可选)
# 6. 启动: npm run dev
# 7. 部署合约:
#    - Solana: cd solana && npm run deploy:devnet
#    - 以太坊: npm run deploy:local
# 8. 测试: 访问 http://localhost:3000 